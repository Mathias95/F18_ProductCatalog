//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1064 with alias "productsBase"
	/// <summary>ProductsBase</summary>
	public partial interface IProductsBase : IPublishedContent
	{
		/// <summary>Image</summary>
		IPublishedContent PImage { get; }

		/// <summary>Name</summary>
		string PName { get; }
	}

	/// <summary>ProductsBase</summary>
	[PublishedContentModel("productsBase")]
	public partial class ProductsBase : PublishedContentModel, IProductsBase
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "productsBase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ProductsBase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ProductsBase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("pImage")]
		public IPublishedContent PImage
		{
			get { return GetPImage(this); }
		}

		/// <summary>Static getter for Image</summary>
		public static IPublishedContent GetPImage(IProductsBase that) { return that.GetPropertyValue<IPublishedContent>("pImage"); }

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("pName")]
		public string PName
		{
			get { return GetPName(this); }
		}

		/// <summary>Static getter for Name</summary>
		public static string GetPName(IProductsBase that) { return that.GetPropertyValue<string>("pName"); }
	}
}
